DataTypes in Javascript:
  Javascript is a dynamic programming language. it means in Javascript, there is no fixed datatype to a variable. The datatype of a variable is decided by value it is holding.

  There are two categories of datatypes:
     i. primitive data DataTypes
     ii. non primitive datatypes

    i. primitive datatypes : These datatypes holds the value and compares only value. These datatypes are immutable.
      There are 5 basic primitive DataTypes such as
      number, string, boolean, undefined , null

    ii. non primitive DataTypes : these datatypes holds the value and compares the address/reference . These datatypes are mutable
        The basic non primitive datatypes are 
        functions, arrays, objects

can we change one datatype to another datatype?
  yes, The process of changing one datatype to another datatype is called typecasting. There are two types of typecasting
  i. implicit typecasting
  ii. explicit typecasting

i. implicit typecasting : it is the default or automatic conversion of datatypes based on operation
  eg:  10 + "5"  ===> "10"+"5" ===> "105",
    5 * '4' ===> 5*4 ==>20
  

ii. explicit typecasting : it is the forced way of converting one datatype to another
  eg :   5 + +'4' ===> 5 + 4 ==>9
         5 + Number('4') ==> 5+4==>9

number : Any numerical value is a number
  Every number can have some default methods such as toString, toPrecision etc..,
  numbers also have math methods such as sqrt, cbrt, pow, ceil, floor etc..,


1.toFixed: it is used to return roundup value of n decimal digits
2.toPrecision: it is used to return roundup value of n total digits
3.toString(base): it is used to convert number to a string and different base system
eg.let x =25.4168
      x.toFixed(2) = 25.42
      x.toPrecision(3) = 25.4
      x=25;
      x.toString(2) ===>11001

  Most used math methods are
    math.sqrt(16) ===> It returns square root of -- 4
    math.cbrt(27) ===> It returns cube root of --- 3
    math.pow(2,3) ===> returns 2 powers 3 --- 8
    same thing like can be done like 2**3
    math.abs(-12) ==> Returns absolute value in positive values
    math.max(5,1,6,2) ==> Returns maximum value -- 6
    math.min(5,1,6,2) ==> returns minimum value -- 1
    math.ceil(2.1) ==> return nearest greater value -- 3
    math.floor(2.8) ==> returns nearest smaller value -- 2
    math.round(1.4) ==> returns nearest interger -- 1
    math.random() ==> returns random value between 0 and 1


String: String is collections of characters
eg."abcd1234", "abc 123" 
In Javascript can be written single or double quotes
There is no Difference between but used alternativeky is nested Strings
String can also dynamic called 'template literals'. It useds backticks for strings and $() for dynamic values
let c = "John"
console.log('The name is $(c))

String Method:
      toUpperCase():- USed to cannot string into UpperCase 
Note: Original string will never change since strings are immutable
      toUpperCase() -- used to return converted value of string into lowercase
      length -- used to return number of characters, tehe string contains
      charAt(i) -- used to return character at index i
      indexOf('c') -- USed to return first occurance of index of character calledlast
      lastIndexOf('c') -- Used to return last occurance of index of character
      stringWith('str') -- used to return true/false based on string is starting with str or Note
      endsWith('str') -- used to return true/false based on string in ending with str or Not
      slice(s,e) -- used to return substring from index s to ondex e-1
      slice(s) -- used to return substring form index s to end
      slice(v) -- used to split the string based on value v and return an array of sub strings
      eg: "prasad".split('a') ===>['pr','s','d']
      replace(old,new) -- used to replcae first occurance of old value to new value for all occurance,we can use replaceAll
      trim() : used to return string after removing the spaces from starting and ending of string

Operators:
    boolean: boolean is used to store true/false. If converted to numbers, true is converted as 1 and false is converted as 0

    undefined: undefined is the primitive datatype/ value that reprsents uninitialized or non existent element
    
    let  y ;
    console.log(y)  //undefined 
    undefined expect to future occurand of value

    null: null is also the primitive value that of indicates a variables has no values or no object 

